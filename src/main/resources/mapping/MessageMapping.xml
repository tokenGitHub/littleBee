<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.littleBee.bee.dao.MessageDao" >
    <resultMap id="BaseResultMap" type="com.littleBee.bee.domain.Message" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="send_user_id" property="sendUserId" jdbcType="INTEGER" />
        <result column="receive_user_id" property="receiveUserId" jdbcType="INTEGER" />
        <result column="context" property="context" jdbcType="VARCHAR" />
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
        <result column="send_user_name" property="sendName" jdbcType="TIMESTAMP" />
    </resultMap>

    <insert id="insertMessage">
         insert into message set send_user_id = #{sendUserId},
                              receive_user_id  = #{targetUserId},
                              context  = #{context},
                              send_time  = #{date}
    </insert>

    <select id="listUserChatMessage" resultMap="BaseResultMap">
        select message.*, user.real_name send_user_name from  message
        left join user
        on user.id = message.send_user_id
        where
            (
                send_user_id = #{userId}
                and
                receive_user_id = #{targetUserId}
            )
            or (
                receive_user_id = #{userId}
                and
                send_user_id = #{targetUserId}
            )
        order by send_time
    </select>
</mapper>